on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: windows-latest
    steps:
      - name: Install autohotkey by package manager chocolatey
        run: choco install autohotkey
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build executeable from autohotkey script
        run: |
          & ${Env:ProgramFiles}\AutoHotkey\Compiler\Ahk2Exe.exe /in .\Src\AutoVpnUi.ahk /icon .\Res\AutoVpnUi_48x48.ico /out .\AutoVpnUi.exe
      - name: Build zip package containing artifacts for release
        run: |
          Get-ChildItem -Path .\Res\AddToAutostart.ps1, .\AutoVpnUi.exe | Compress-Archive -DestinationPath .\AutoVpnUi-${{ github.ref }}.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: .\AutoVpnUi-${{ github.ref }}.zip
          asset_name: AutoVpnUi-${{ github.ref }}.zip
          asset_content_type: application/zip
